---
# tasks file for csdk

- name: check if this version is already installed
  stat:
    path: "{{ csdk_install_path }}/.install_complete"
  register: st
  ignore_errors: true

- name: set already installed flag if necessary
  set_fact:
    csdk_version_previously_installed: true
  when: st.stat.exists is defined and st.stat.exists

- name: check if force install flag is set
  set_fact:
    csdk_version_previously_installed: false
  when: force_csdk_install

- name: set the install media file name if HCL
  set_fact:
    csdk_install_media_name: "hcl.csdk.{{ csdk_version }}.LNX.tar.gz"
  when: vendor == "hcl"

- name: set the install media file name if IBM
  set_fact:
    csdk_install_media_name: "clientsdk.{{ csdk_version }}.LINUX.tar"
  when: vendor == "ibm"

- name: set selinux permissive
  selinux:
    policy: targeted
    state: permissive
  when: ansible_facts['os_family'] == "RedHat" and not csdk_version_previously_installed

- name: install CSDK prerequisites on RedHat platforms
  yum:
    name:
    - libaio.x86_64
    - libgcc.x86_64
    - libstdc++.x86_64
    - ncurses.x86_64
    - pam.x86_64
  when: ansible_facts['os_family'] == "RedHat" and not csdk_version_previously_installed

- name: install CSDK prerequisites on Debian platforms
  apt:
    name:
    - python2.7
    - openjdk-8-jdk
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  when: ansible_facts['os_family'] == "Debian" and not csdk_version_previously_installed

- name: install CSDK prerequisites on SuSE platforms
  zypper:
    name:
    - java-1_8_0-openjdk
    - libncurses5
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
  when: ansible_facts['os_family'] == "Suse" and not csdk_version_previously_installed

- name: create informix group
  group:
    name: informix
    state: present
    system: false
  when: not csdk_version_previously_installed

- name: create informix user
  user:
    home: /opt/informix
    group: informix
    name: informix
    shell: /bin/bash
    state: present
    system: false
  when: not csdk_version_previously_installed

- name: create target install directory
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ csdk_install_path }}"
    state: directory
  when: not csdk_version_previously_installed

- name: create temp install directory
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ csdk_tmp_path }}"
    state: directory
  when: not csdk_version_previously_installed

- name: upload / download and extract CSDK installer
  unarchive:
    dest: "{{ csdk_tmp_path }}"
    src: "{{ source_location_of_csdk_media }}/{{ csdk_install_media_name }}"
  when: not csdk_version_previously_installed

- name: run installer
  become: true
  command: ./installclientsdk -i silent -DLICENSE_ACCEPTED=true -DUSER_INSTALL_DIR="{{ csdk_install_path }}"
  args:
    chdir: "{{ csdk_tmp_path }}"
  when: not csdk_version_previously_installed

- name: validate install
  stat:
    path: "{{ csdk_install_path }}/bin/dbaccess"
  register: val
  ignore_errors: true

- name: abort if CSDK install failed
  fail:
    msg: "CSDK Install failed - dbaccess does not exist or is zero bytes"
  when: not val.stat.exists or val.stat.size == 0 and not csdk_version_previously_installed

- name: make this the default version by linking "informixdir" to it
  file:
    group: informix
    mode: 0775
    owner: informix
    src: "{{ csdk_install_path }}"
    dest: "{{ csdk_base_path }}/informixdir"
    state: link
  when: not csdk_version_previously_installed

- name: clean up
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ csdk_tmp_path }}"
    state: absent
  when: not csdk_version_previously_installed

- name: mark installation as complete
  file:
    group: informix
    mode: 0400
    owner: informix
    path: "{{ csdk_install_path }}/.install_complete"
    state: touch
  when: not csdk_version_previously_installed
